<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.retailsys.dao.OrderItemsDao">

    <resultMap type="com.retailsys.entity.OrderItems" id="OrderItemsMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="orderId" column="order_id" jdbcType="INTEGER"/>
        <result property="productId" column="product_id" jdbcType="INTEGER"/>
        <result property="productName" column="product_name" jdbcType="VARCHAR"/>
        <result property="productImage" column="product_image" jdbcType="VARCHAR"/>
        <result property="quantity" column="quantity" jdbcType="INTEGER"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="totalPrice" column="total_price" jdbcType="NUMERIC"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="OrderItemsMap">
        select
id, order_id, product_id, product_name, product_image, quantity, price, total_price, created_at
        from order_items
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrderItemsMap">
        select
id, order_id, product_id, product_name, product_image, quantity, price, total_price, created_at
        from order_items
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="orderId != null">
                and order_id = #{orderId}
            </if>
            <if test="productId != null">
                and product_id = #{productId}
            </if>
            <if test="productName != null and productName != ''">
                and product_name = #{productName}
            </if>
            <if test="productImage != null and productImage != ''">
                and product_image = #{productImage}
            </if>
            <if test="quantity != null">
                and quantity = #{quantity}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="totalPrice != null">
                and total_price = #{totalPrice}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from order_items
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="orderId != null">
                and order_id = #{orderId}
            </if>
            <if test="productId != null">
                and product_id = #{productId}
            </if>
            <if test="productName != null and productName != ''">
                and product_name = #{productName}
            </if>
            <if test="productImage != null and productImage != ''">
                and product_image = #{productImage}
            </if>
            <if test="quantity != null">
                and quantity = #{quantity}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="totalPrice != null">
                and total_price = #{totalPrice}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into order_items(order_id, product_id, product_name, product_image, quantity, price, total_price, created_at)
        values (#{orderId}, #{productId}, #{productName}, #{productImage}, #{quantity}, #{price}, #{totalPrice}, #{createdAt})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into order_items(order_id, product_id, product_name, product_image, quantity, price, total_price, created_at)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.orderId}, #{entity.productId}, #{entity.productName}, #{entity.productImage}, #{entity.quantity}, #{entity.price}, #{entity.totalPrice}, #{entity.createdAt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into order_items(order_id, product_id, product_name, product_image, quantity, price, total_price, created_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.orderId}, #{entity.productId}, #{entity.productName}, #{entity.productImage}, #{entity.quantity}, #{entity.price}, #{entity.totalPrice}, #{entity.createdAt})
        </foreach>
        on duplicate key update
order_id = values(order_id),
product_id = values(product_id),
product_name = values(product_name),
product_image = values(product_image),
quantity = values(quantity),
price = values(price),
total_price = values(total_price),
created_at = values(created_at)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update order_items
        <set>
            <if test="orderId != null">
                order_id = #{orderId},
            </if>
            <if test="productId != null">
                product_id = #{productId},
            </if>
            <if test="productName != null and productName != ''">
                product_name = #{productName},
            </if>
            <if test="productImage != null and productImage != ''">
                product_image = #{productImage},
            </if>
            <if test="quantity != null">
                quantity = #{quantity},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="totalPrice != null">
                total_price = #{totalPrice},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from order_items where id = #{id}
    </delete>

</mapper>

